<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dpz3</name>
    </assembly>
    <members>
        <member name="T:dpz3.Console.Arguments">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="M:dpz3.Console.Arguments.#ctor(System.String[])">
            <summary>
            对象实例化
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:dpz3.Debug">
            <summary>
            调试输出专用类
            </summary>
        </member>
        <member name="M:dpz3.Debug.WriteLine(System.String)">
            <summary>
            输出一行
            </summary>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.Debug.Write(System.String)">
            <summary>
            输出
            </summary>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.Debug.WriteWithSign(System.String)">
            <summary>
            带标志输出
            </summary>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.Debug.Write(System.String,System.Boolean,System.Boolean)">
            <summary>
            输出
            </summary>
            <param name="cnt"></param>
            <param name="sign"></param>
            <param name="r"></param>
        </member>
        <member name="T:dpz3.DpzDynamicMetaObject">
            <summary>
            动态对象
            </summary>
        </member>
        <member name="M:dpz3.DpzDynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            对象实例化
            </summary>
            <param name="expression"></param>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.DpzDynamicMetaObject.BindSetMember(System.Dynamic.SetMemberBinder,System.Dynamic.DynamicMetaObject)">
            <summary>
            设置值
            </summary>
            <param name="binder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.DpzDynamicMetaObject.BindGetMember(System.Dynamic.GetMemberBinder)">
            <summary>
            获取值
            </summary>
            <param name="binder"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.Dynamic">
            <summary>
            动态类型
            </summary>
        </member>
        <member name="M:dpz3.Dynamic.SetProperty(System.String,System.Object)">
            <summary>
            设置属性
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Dynamic.GetProperty(System.String)">
            <summary>
            获取属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.File.BinaryFile">
            <summary>
            二进制操作文件
            </summary>
        </member>
        <member name="P:dpz3.File.BinaryFile.FilePath">
            <summary>
            文件地址
            </summary>
        </member>
        <member name="P:dpz3.File.BinaryFile.Stream">
            <summary>
            文件操作流
            </summary>
        </member>
        <member name="P:dpz3.File.BinaryFile.Position">
            <summary>
            获取或设置当前操作位置
            </summary>
        </member>
        <member name="P:dpz3.File.BinaryFile.IsEnd">
            <summary>
            获取是否在文档末尾
            </summary>
        </member>
        <member name="P:dpz3.File.BinaryFile.Length">
            <summary>
            获取文件当前长度
            </summary>
        </member>
        <member name="M:dpz3.File.BinaryFile.#ctor(System.String,System.IO.FileMode)">
            <summary>
            对象实例化
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
        </member>
        <member name="M:dpz3.File.BinaryFile.Read(System.Int64,System.Int32)">
            <summary>
            读取内容
            </summary>
            <param name="pos"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.BinaryFile.Read(System.Int32)">
            <summary>
            读取内容
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.BinaryFile.Read">
            <summary>
            读取内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.BinaryFile.Write(System.Int64,System.Byte[])">
            <summary>
            写入内容
            </summary>
            <param name="pos"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.BinaryFile.Write(System.Byte[])">
            <summary>
            写入内容
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:dpz3.File.BinaryFile.Append(System.Byte[])">
            <summary>
            在文件末尾添加内容
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:dpz3.File.BinaryFile.ReadAllBytes(System.String,System.Boolean)">
            <summary>
            读取文件内容
            </summary>
            <param name="Path"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.BinaryFile.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            将内容写入文件
            </summary>
            <param name="Path"></param>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.File.BinaryFile.Close">
            <summary>
            关闭文件
            </summary>
        </member>
        <member name="M:dpz3.File.BinaryFile.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:dpz3.File.BinaryFile.GetMD5(System.String)">
            <summary>
            获取文件的MD5值
            </summary>
        </member>
        <member name="T:dpz3.File.ConfFile">
            <summary>
            Linux通用配置文件
            </summary>
        </member>
        <member name="P:dpz3.File.ConfFile.Groups">
            <summary>
            获取全部
            </summary>
        </member>
        <member name="M:dpz3.File.ConfFile.#ctor(System.String)">
            <summary>
            Loads a configuration file.
            </summary>
            <param name="file">The filename where the configuration file can be found.</param>
        </member>
        <member name="P:dpz3.File.ConfFile.Item(System.String)">
            <summary>
            获取一个设置组
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.ConfFile.Save(System.String)">
            <summary>
            Saves the configuration to a file
            </summary>
            <param name="filename">The filename for the saved configuration file.</param>
        </member>
        <member name="M:dpz3.File.ConfFile.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.File.Conf.Line">
            <summary>
            配置行
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.Line.OnParseString">
            <summary>
            获取标准字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.Line.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.File.Conf.Note">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:dpz3.File.Conf.Note.Content">
            <summary>
            获取或设置注释内容
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.Note.OnParseString">
            <summary>
            获取标准字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.Note.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.File.Conf.Setting">
            <summary>
            配置项
            </summary>
        </member>
        <member name="P:dpz3.File.Conf.Setting.Key">
            <summary>
            获取或设置键
            </summary>
        </member>
        <member name="P:dpz3.File.Conf.Setting.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.Setting.OnParseString">
            <summary>
            获取标准字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.Setting.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.File.Conf.SettingGroup">
            <summary>
            设置组
            </summary>
        </member>
        <member name="P:dpz3.File.Conf.SettingGroup.Name">
            <summary>
            获取或设置名称
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.AddEmptyLine">
            <summary>
            添加一条空行
            </summary>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.AddNote(System.String)">
            <summary>
            添加一条注释
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:dpz3.File.Conf.SettingGroup.Item(System.String)">
            <summary>
            获取或设置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.ContainsKey(System.String)">
            <summary>
            判断是否存在键值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.Set(System.String,System.String)">
            <summary>
            设置配置
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.Delete(System.String)">
            <summary>
            删除配置
            </summary>
            <param key="key">The name of the setting to delete.</param>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.OnParseString">
            <summary>
            获取标准字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.Conf.SettingGroup.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.File.TextFile">
            <summary>
            文本文件
            </summary>
        </member>
        <member name="P:dpz3.File.TextFile.Encoding">
            <summary>
            获取文本文件的编码形式
            </summary>
        </member>
        <member name="M:dpz3.File.TextFile.#ctor(System.String,System.Text.Encoding,System.IO.FileMode)">
            <summary>
            对象实例化
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <param name="mode"></param>
        </member>
        <member name="M:dpz3.File.TextFile.ReadToEnd(System.Int64)">
            <summary>
            读取内容
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.ReadToEnd">
            <summary>
            读取所有内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.ReadLine(System.Int64)">
            <summary>
            读取一行字符
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.ReadLine">
            <summary>
            读取一行字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.Read(System.Int64,System.Int32)">
            <summary>
            读取内容
            </summary>
            <param name="pos"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.Read(System.Int32)">
            <summary>
            读取内容
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.TextFile.Write(System.Int64,System.String)">
            <summary>
            写入内容
            </summary>
            <param name="pos"></param>
            <param name="content"></param>
        </member>
        <member name="M:dpz3.File.TextFile.Write(System.String)">
            <summary>
            写入内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:dpz3.File.TextFile.WriteLine(System.String)">
            <summary>
            写一行内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:dpz3.File.TextFile.WriteLine(System.Int64,System.String)">
            <summary>
            写一行内容
            </summary>
            <param name="pos"></param>
            <param name="content"></param>
        </member>
        <member name="M:dpz3.File.TextFile.Append(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:dpz3.File.TextFile.AppendLine(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:dpz3.File.UTF8File">
            <summary>
            以UTF8编码操作文件
            </summary>
        </member>
        <member name="F:dpz3.File.UTF8File.WriteWithBoom">
            <summary>
            获取或设置是否带BOOM输出
            </summary>
        </member>
        <member name="M:dpz3.File.UTF8File.#ctor(System.String,System.IO.FileMode)">
            <summary>
            对象实例化
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
        </member>
        <member name="M:dpz3.File.UTF8File.ReadAllText(System.String,System.Boolean)">
            <summary>
            读取文件内容
            </summary>
            <param name="path"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.UTF8File.ReadAllText(System.String)">
            <summary>
            读取文件内容
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.File.UTF8File.WriteAllText(System.String,System.String)">
            <summary>
            将内容写入文件
            </summary>
            <param name="path"></param>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.File.UTF8File.AppendText(System.String,System.String)">
            <summary>
            将内容追加写入文件
            </summary>
            <param name="path"></param>
            <param name="cnt"></param>
        </member>
        <member name="M:dpz3.File.UTF8File.AppendTextLine(System.String,System.String)">
            <summary>
            将内容追加写入文件并换行
            </summary>
            <param name="Path"></param>
            <param name="cnt"></param>
        </member>
        <member name="T:dpz3.Html.NodeType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="F:dpz3.Html.NodeType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:dpz3.Html.NodeType.Element">
            <summary>
            元素节点
            </summary>
        </member>
        <member name="F:dpz3.Html.NodeType.Declaration">
            <summary>
            申明节点
            </summary>
        </member>
        <member name="F:dpz3.Html.NodeType.Note">
            <summary>
            注释
            </summary>
        </member>
        <member name="T:dpz3.Html.BasicNode">
            <summary>
            基础节点
            </summary>
        </member>
        <member name="P:dpz3.Html.BasicNode.NodeType">
            <summary>
            获取节点类型
            </summary>
        </member>
        <member name="P:dpz3.Html.BasicNode.Parent">
            <summary>
            获取父节点
            </summary>
        </member>
        <member name="M:dpz3.Html.BasicNode.#ctor(dpz3.Html.NodeType)">
            <summary>
            实例化
            </summary>
            <param name="nodeType"></param>
        </member>
        <member name="M:dpz3.Html.BasicNode.OnGetOuterHtml">
            <summary>
            获取包含自身的完整XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Html.BasicNode.OuterHTML">
            <summary>
            获取包含自身的完整XML字符串
            </summary>
        </member>
        <member name="M:dpz3.Html.BasicNode.OnGetInnerHtml">
            <summary>
            获取包含的Html字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.BasicNode.OnGetInnerText">
            <summary>
            获取包含的文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.BasicNode.OnSetInnerHtml(System.String)">
            <summary>
            获取包含的XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Html.BasicNode.InnerHTML">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="P:dpz3.Html.BasicNode.InnerText">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="T:dpz3.Html.DeclarationNode">
            <summary>
            申明节点
            </summary>
        </member>
        <member name="P:dpz3.Html.DeclarationNode.Content">
            <summary>
            获取或设置
            </summary>
        </member>
        <member name="M:dpz3.Html.DeclarationNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.DeclarationNode.OnGetOuterHtml">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.DeclarationNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlCss">
            <summary>
            Css管理器
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlCss.Items">
            <summary>
            单元集合
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCss.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCss.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCss.OnParseString">
            <summary>
            获取标准字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Html.HtmlCssItem">
            <summary>
            Css设置单元
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlCssItem.Name">
            <summary>
            获取或设置名称
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlCssItem.Content">
            <summary>
            获取或设置内容
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCssItem.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCssItem.OnParseString">
            <summary>
            获取标准字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Html.HtmlCssMedia">
            <summary>
            响应式片段
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlCssMedia.Keys">
            <summary>
            键名称集合
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlCssMedia.Items">
            <summary>
            单元集合
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlCssMedia.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="names"></param>
        </member>
        <member name="M:dpz3.Html.HtmlCssMedia.OnParseString">
            <summary>
            获取标准字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Html.HtmlCssUnit">
            <summary>
            Css对象
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlCssUnitCollection">
            <summary>
            Css对象
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlDataElement">
            <summary>
            数据元素
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlDataElement.Data">
            <summary>
            获取或设置关联数据
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlDataElement.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:dpz3.Html.HtmlDataElement.OnGetInnerHtml">
            <summary>
            获取包含的Html代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDataElement.OnGetInnerText">
            <summary>
            获取包含的文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDataElement.OnSetInnerHtml(System.String)">
            <summary>
            设置包含的HTML代码
            </summary>
            <param name="xml"></param>
        </member>
        <member name="T:dpz3.Html.HtmlDocument">
            <summary>
            文档对象
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlDocument.Head">
            <summary>
            获取Head元素
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlDocument.Body">
            <summary>
            获取Body元素
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlDocument.Nodes">
            <summary>
            获取子节点集合
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.CreateElement(System.String)">
            <summary>
            建立新元素
            </summary>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.GetElementsByTagName(System.String,System.Boolean)">
            <summary>
            获取所有标签名节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.GetElementsByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取所有满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.GetElementByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取第一个满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.GetElementById(System.String)">
            <summary>
            根据id查找元素
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.GetElementsByClassName(System.String)">
            <summary>
            根据id查找元素
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Html.HtmlDocument.InnerHTML">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlDocument.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlElement">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlElement.Children">
            <summary>
            获取子节点集合
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlElement.Parent">
            <summary>
            获取父节点
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlElement.Name">
            <summary>
            获取或设置名称属性
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlElement.Id">
            <summary>
            获取或设置id属性
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlElement.TagName">
            <summary>
            获取标签名称
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlElement.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElement.OnGetOuterHtml">
            <summary>
            获取完整XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.OnGetInnerHtml">
            <summary>
            获取包含
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.OnSetInnerHtml(System.String)">
            <summary>
            设置包含XML
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElement.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.GetElementsByTagName(System.String,System.Boolean)">
            <summary>
            获取所有标签名节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.GetElementsByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取所有满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.GetElementByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取第一个满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.GetElementById(System.String)">
            <summary>
            根据id查找元素
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.GetElementsByClassName(System.String)">
            <summary>
            根据id查找元素
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlElement.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlElementCollection">
            <summary>
            网页元素集合
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlElementCollection.#ctor(dpz3.Html.HtmlElement)">
            <summary>
            对象实例化
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElementCollection.Add(dpz3.Html.HtmlElement)">
            <summary>
            添加元素
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElementCollection.Add(dpz3.Html.HtmlElement,System.Boolean)">
            <summary>
            添加元素
            </summary>
            <param name="element"></param>
            <param name="addNode"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElementCollection.Insert(System.Int32,dpz3.Html.HtmlElement)">
            <summary>
            插入对象
            </summary>
            <param name="index"></param>
            <param name="element"></param>
        </member>
        <member name="M:dpz3.Html.HtmlElementCollection.Insert(System.Int32,dpz3.Html.HtmlElement,System.Boolean)">
            <summary>
            插入对象
            </summary>
            <param name="index"></param>
            <param name="element"></param>
            <param name="insertNode"></param>
        </member>
        <member name="T:dpz3.Html.HtmlNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlNode.Nodes">
            <summary>
            获取子节点集合
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlNode.Attr">
            <summary>
            获取属性集合
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlNode.SetEncodeAttr(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="P:dpz3.Html.HtmlNode.IsSingle">
            <summary>
            获取或设置是否为独立标签
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlNode.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlNode.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:dpz3.Html.HtmlNode.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlNode.GetNodesByTagName(System.String,System.Boolean)">
            <summary>
            获取所有标签名节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlNode.GetNodesByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取所有满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlNode.GetNodeByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取第一个满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.HtmlNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Html.HtmlNodeCollection">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="P:dpz3.Html.HtmlNodeCollection.Parent">
            <summary>
            获取父对象
            </summary>
        </member>
        <member name="M:dpz3.Html.HtmlNodeCollection.#ctor(dpz3.Html.HtmlNode)">
            <summary>
            对象实例化
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:dpz3.Html.HtmlNodeCollection.Add(dpz3.Html.BasicNode)">
            <summary>
            添加对象
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:dpz3.Html.HtmlNodeCollection.Insert(System.Int32,dpz3.Html.BasicNode)">
            <summary>
            插入对象
            </summary>
            <param name="index"></param>
            <param name="node"></param>
        </member>
        <member name="T:dpz3.Html.NoteNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Html.NoteNode.Note">
            <summary>
            获取或设置
            </summary>
        </member>
        <member name="M:dpz3.Html.NoteNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.NoteNode.OnGetOuterHtml">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.NoteNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Html.Parser">
            <summary>
            解析器
            </summary>
        </member>
        <member name="T:dpz3.Html.Parser.ParserTypes">
            <summary>
            解析器类型
            </summary>
        </member>
        <member name="M:dpz3.Html.Parser.EscapeEncode(System.String)">
            <summary>
            获取HTML转码后的序列化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.Parser.EscapeDecode(System.String)">
            <summary>
            获取HTML反转码后的序列化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.Parser.GetNodes(System.String,dpz3.Html.HtmlElement)">
            <summary>
            获取节点对象
            </summary>
            <param name="xml"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.Parser.FillCss(dpz3.Html.HtmlCss,System.String)">
            <summary>
            填充CSS内容
            </summary>
            <param name="css"></param>
            <param name="cssText"></param>
        </member>
        <member name="M:dpz3.Html.Parser.GetDocument(System.String)">
            <summary>
            获取一个文档对象
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.Html.TextNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Html.TextNode.Value">
            <summary>
            获取或设置
            </summary>
        </member>
        <member name="M:dpz3.Html.TextNode.SetEncodeValue(System.String)">
            <summary>
            设置带编码的值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.TextNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Html.TextNode.OnGetOuterHtml">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.TextNode.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Html.TextNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.InsensitiveKeyValues`1">
            <summary>
            大小写不敏感的键值存储
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.OnReturnDefaultValue">
            <summary>
            返回默认值事件
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.InsensitiveKeyValues`1.Item(System.String)">
            <summary>
            获取或设置键值内容
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.InsensitiveKeyValues`1.Keys">
            <summary>
            获取键集合
            </summary>
        </member>
        <member name="P:dpz3.InsensitiveKeyValues`1.Values">
            <summary>
            获取值集合
            </summary>
        </member>
        <member name="P:dpz3.InsensitiveKeyValues`1.Count">
            <summary>
            获取集合内元素数量
            </summary>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.ContainsKey(System.String)">
            <summary>
            获取列表中是否存在键值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.GetEnumerator">
            <summary>
            获取枚举管理器
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取枚举接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.Remove(System.String)">
            <summary>
            移除一个元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.TryGetValue(System.String,`0@)">
            <summary>
            尝试获取值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.InsensitiveKeyValues`1.IsEmpty">
            <summary>
            获取对象内元素是否为空
            </summary>
        </member>
        <member name="M:dpz3.InsensitiveKeyValues`1.OnDispose">
            <summary>
            释放内存
            </summary>
        </member>
        <member name="T:dpz3.Json.JsonArray">
            <summary>
            数组单元
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonArray.#ctor(dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonArray.OnGetArrayItem(System.Int32)">
            <summary>
            获取索引对象
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonArray.OnSetArrayItem(System.Int32,dpz3.Json.JsonUnit)">
            <summary>
            设置索引对象
            </summary>
            <param name="index"></param>
            <param name="unit"></param>
        </member>
        <member name="M:dpz3.Json.JsonArray.OnGetJsonString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonArray.OnGetItemCount">
            <summary>
            获取索引对象数量集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonArray.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Json.JsonBoolean">
            <summary>
            布尔单元类型
            </summary>
        </member>
        <member name="P:dpz3.Json.JsonBoolean.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonBoolean.#ctor(dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonBoolean.OnGetBoolean">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonBoolean.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonBoolean.OnSetBoolean(System.Boolean)">
            <summary>
            设置数值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.Json.JsonBoolean.OnGetJsonString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Json.JsonNumber">
            <summary>
            数值单元类型
            </summary>
        </member>
        <member name="P:dpz3.Json.JsonNumber.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonNumber.#ctor(dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonNumber.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonNumber.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonNumber.OnSetNumber(System.Double)">
            <summary>
            设置数值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.Json.JsonNumber.OnGetJsonString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Json.JsonObject">
            <summary>
            对象单元
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonObject.#ctor(dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonObject.OnGetKeys">
            <summary>
            获取子对象键值集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonObject.OnGetChildItem(System.String)">
            <summary>
            获取子对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonObject.OnSetChildItem(System.String,dpz3.Json.JsonUnit)">
            <summary>
            设置子对象
            </summary>
            <param name="key"></param>
            <param name="unit"></param>
        </member>
        <member name="M:dpz3.Json.JsonObject.OnGetJsonString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonObject.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Json.JsonString">
            <summary>
            字符串单元
            </summary>
        </member>
        <member name="P:dpz3.Json.JsonString.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonString.#ctor(dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonString.String2Unicode(System.String)">
            <summary>  
            字符串转Unicode
            </summary>
            <param name="source">源字符串</param>
            <returns>Unicode编码后的字符串</returns>
        </member>
        <member name="M:dpz3.Json.JsonString.StringToUnicode(System.String)">
            <summary>  
            字符串转为UniCode码字符串  
            </summary>  
            <param name="s"></param>  
            <returns></returns>  
        </member>
        <member name="M:dpz3.Json.JsonString.UnicodeToString(System.String)">
            <summary>  
            Unicode字符串转为正常字符串  
            </summary>  
            <param name="srcText"></param>  
            <returns></returns>  
        </member>
        <member name="M:dpz3.Json.JsonString.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonString.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonString.OnSetNumber(System.Double)">
            <summary>
            设置数值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.Json.JsonString.OnSetString(System.String)">
            <summary>
            设置字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:dpz3.Json.JsonString.GetJsonString(System.String)">
            <summary>
            获取标准化的Json字符串
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonString.OnGetJsonString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonString.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Json.UnitType">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="F:dpz3.Json.UnitType.Number">
            <summary>
            数值类型
            </summary>
        </member>
        <member name="F:dpz3.Json.UnitType.String">
            <summary>
            字符串类型
            </summary>
        </member>
        <member name="F:dpz3.Json.UnitType.Object">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="F:dpz3.Json.UnitType.Array">
            <summary>
            数组类型
            </summary>
        </member>
        <member name="T:dpz3.Json.JsonUnit">
            <summary>
            Json存储单元
            </summary>
        </member>
        <member name="P:dpz3.Json.JsonUnit.UnitType">
            <summary>
            获取单元类型
            </summary>
        </member>
        <member name="P:dpz3.Json.JsonUnit.Parent">
            <summary>
            获取父对象
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonUnit.#ctor(dpz3.Json.UnitType,dpz3.Json.JsonUnit)">
            <summary>
            对象实例化
            </summary>
            <param name="type"></param>
            <param name="parent"></param>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.GetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnSetNumber(System.Double)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.SetValue(System.Double)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetBoolean">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.GetBoolean">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnSetBoolean(System.Boolean)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.SetBoolean(System.Boolean)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.GetString">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnSetString(System.String)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.SetValue(System.String)">
            <summary>
            设置数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetJsonString">
            <summary>
            获取Json标准字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.ToJsonString">
            <summary>
            获取Json标准字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetArrayItem(System.Int32)">
            <summary>
            获取索引对象
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnSetArrayItem(System.Int32,dpz3.Json.JsonUnit)">
            <summary>
            设置索引对象
            </summary>
            <param name="index"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Json.JsonUnit.Item(System.Int32)">
            <summary>
            获取或设置数组对象
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetChildItem(System.String)">
            <summary>
            获取子对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnSetChildItem(System.String,dpz3.Json.JsonUnit)">
            <summary>
            设置子对象
            </summary>
            <param name="key"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Json.JsonUnit.Item(System.String)">
            <summary>
            获取或设置子对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetKeys">
            <summary>
            获取子对象键值集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Json.JsonUnit.Keys">
            <summary>
            获取子对象键值集合
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnGetItemCount">
            <summary>
            获取索引对象数量集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Json.JsonUnit.Count">
            <summary>
            获取索引对象数量集合
            </summary>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Object(System.String)">
            <summary>
            获取一个对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Object(System.Int32)">
            <summary>
            获取一个对象
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Array(System.String)">
            <summary>
            获取一个数组
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Array(System.Int32)">
            <summary>
            获取一个数组
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.String(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.String(System.Int32)">
            <summary>
            获取一个字符串
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Bool(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Bool(System.Int32)">
            <summary>
            获取一个字符串
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Number(System.String)">
            <summary>
            获取一个数值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.Number(System.Int32)">
            <summary>
            获取一个数值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.JsonUnit.OnParseString">
            <summary>
            获取Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Json.Parser">
            <summary>
            Json解析器
            </summary>
        </member>
        <member name="F:dpz3.Json.Parser.EnforceUnicode">
            <summary>
            是否强制使用Unicode进行非Ascii字符编码
            </summary>
        </member>
        <member name="M:dpz3.Json.Parser.ParseJson(System.String)">
            <summary>
            获取对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.Parser.GetObject(dpz3.Json.JsonUnit,System.Type)">
            <summary>
            将Json对象覆盖到标准对象
            </summary>
            <param name="unit"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.Parser.SerializeObject(System.Object)">
            <summary>
            将对象进行Json序列化
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Json.Parser.DeserializeObject(System.String,System.Type)">
            <summary>
            将Json字符串反序列化并按类型返回对象
            </summary>
            <param name="json"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.KeyValues`1">
            <summary>
            键/值存储字典
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:dpz3.KeyValues`1.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.KeyValues`1.OnReturnDefaultValue">
            <summary>
            返回默认值事件
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.KeyValues`1.Item(System.String)">
            <summary>
            获取或设置键值内容
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.KeyValues`1.Keys">
            <summary>
            获取键集合
            </summary>
        </member>
        <member name="P:dpz3.KeyValues`1.Values">
            <summary>
            获取值集合
            </summary>
        </member>
        <member name="P:dpz3.KeyValues`1.Count">
            <summary>
            获取集合内元素数量
            </summary>
        </member>
        <member name="M:dpz3.KeyValues`1.Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:dpz3.KeyValues`1.ContainsKey(System.String)">
            <summary>
            获取列表中是否存在键值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.KeyValues`1.GetEnumerator">
            <summary>
            获取枚举管理器
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.KeyValues`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取枚举接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.KeyValues`1.Remove(System.String)">
            <summary>
            移除一个元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.KeyValues`1.TryGetValue(System.String,`0@)">
            <summary>
            尝试获取值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.KeyValues`1.IsEmpty">
            <summary>
            获取对象内元素是否为空
            </summary>
        </member>
        <member name="M:dpz3.KeyValues`1.OnDispose">
            <summary>
            释放内存
            </summary>
        </member>
        <member name="T:dpz3.Net.Dns">
            <summary>
            DNS专用类
            </summary>
        </member>
        <member name="M:dpz3.Net.Dns.GetIPv4Address(System.String)">
            <summary>
            将域名解析为对应的IP地址
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.Net.HttpClient">
            <summary>
            网络客户端
            </summary>
        </member>
        <member name="T:dpz3.Net.HttpClient.DownloadingDelegate">
            <summary>
            下载进度函数
            </summary>
            <param name="size"></param>
            <param name="loaded"></param>
        </member>
        <member name="M:dpz3.Net.HttpClient.Get(System.String)">
            <summary>
            以Get方式获取数据
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Net.HttpClient.Post(System.String,System.String,System.String)">
            <summary>
            以Get方式获取数据
            </summary>
            <param name="url"></param>
            <param name="args"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Net.HttpClient.Download(System.String,System.String,dpz3.Net.HttpClient.DownloadingDelegate)">
            <summary>
            下载文件
            </summary>
            <param name="url"></param>
            <param name="path"></param>
            <param name="downloading"></param>
        </member>
        <member name="T:dpz3.Net.HttpModules.HttpCookies">
            <summary>
            专用于超文本传输协议的会话本地存储信息
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpCookies.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpCookies.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpCookies.ToString">
            <summary>
            获取标准的Cookie字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Net.HttpModules.HttpHeader">
            <summary>
            Http协议头部
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpHeader.OnParseString">
            <summary>
            获取标准的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Net.HttpModules.HttpRequest">
            <summary>
            Http提交管理器
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpRequest.Uri">
            <summary>
            获取地址信息对象
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpRequest.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpRequest.PrintToString">
            <summary>
            打印信息到字符串
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpRequest.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="T:dpz3.Net.HttpModules.HttpResponse">
            <summary>
            Http接收管理器
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpResponse.Protocol">
            <summary>
            获取协议版本
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpResponse.Status">
            <summary>
            获取状态码
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpResponse.Headers">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpResponse.ContentBytes">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpResponse.GetContent(System.Text.Encoding)">
            <summary>
            获取内容
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpResponse.GetUtf8Content">
            <summary>
            获取UTF8内容
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.HttpResponse.ContentLength">
            <summary>
            内容长度
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.HttpResponse.#ctor(System.String,System.Int32,dpz3.Net.HttpModules.HttpHeader,System.Byte[])">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="T:dpz3.Net.HttpModules.HttpStatus">
            <summary>
            Http状态码
            </summary>
        </member>
        <member name="F:dpz3.Net.HttpModules.HttpStatus.Found">
            <summary>
            Found
            </summary>
        </member>
        <member name="F:dpz3.Net.HttpModules.HttpStatus.NotFound">
            <summary>
            Not Found
            </summary>
        </member>
        <member name="T:dpz3.Net.HttpModules.SocketHttp">
            <summary>
            使用Socket重构的Http协议控制器
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.SocketHttp.Request">
            <summary>
            获取提交管理器
            </summary>
        </member>
        <member name="P:dpz3.Net.HttpModules.SocketHttp.Response">
            <summary>
            获取接收管理器
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.SocketHttp.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:dpz3.Net.HttpModules.SocketHttp.Get">
            <summary>
            以Get方式获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Net.HttpModules.SocketHttps">
            <summary>
            使用Socket重构的Https协议控制器
            </summary>
        </member>
        <member name="M:dpz3.Net.HttpModules.SocketHttps.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:dpz3.Net.HttpModules.SocketHttps.Get">
            <summary>
            以Get方式获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Net.Uri">
            <summary>
            统一资源定位符
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.Procotol">
            <summary>
            协议信息
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.Host">
            <summary>
            主机信息
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.Port">
            <summary>
            端口信息
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.Path">
            <summary>
            页面信息
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.FileName">
            <summary>
            页面信息
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.QueryString">
            <summary>
            获取参数字符串
            </summary>
        </member>
        <member name="P:dpz3.Net.Uri.QueryJson">
            <summary>
            获取Json形式表示的参数
            </summary>
        </member>
        <member name="M:dpz3.Net.Uri.#ctor(System.String)">
            <summary>
            新建对象实例
            </summary>
            <param name="url"></param>
        </member>
        <member name="P:dpz3.Net.Uri.Item(System.String)">
            <summary>
            获取或设置参数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Net.Uri.OnParseString">
            <summary>
            获取字符串显示形式
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Object">
            <summary>
            专用操作对象基类
            </summary>
        </member>
        <member name="M:dpz3.Object.OnDispose">
            <summary>
            继承函数，销毁函数
            </summary>
        </member>
        <member name="M:dpz3.Object.OnParseString">
            <summary>
            继承函数，获取字符串表现形式
            </summary>
        </member>
        <member name="M:dpz3.Object.ToString">
            <summary>
            获取字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Object.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="T:dpz3.StringHelper">
            <summary>
            专用字符串扩展
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsNull(System.String)">
            <summary>
            是否为空字符串
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsNone(System.String)">
            <summary>
            是否内容为空，同IsNoneOrNull
            兼容接口，为避免混淆，请使用IsNoneOrNull进行为空判断
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsNoneOrNull(System.String)">
            <summary>
            是否内容为空
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsDouble(System.String)">
            <summary>
            是否为一个双精度数字
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.ToDouble(System.String)">
            <summary>
            获取双精度数据
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsFloat(System.String)">
            <summary>
            是否为一个单精度数字
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.ToFloat(System.String)">
            <summary>
            获取单精度数据
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsInteger(System.String)">
            <summary>
            是否为一个整型数字
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.ToInteger(System.String)">
            <summary>
            获取整型数据
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsLong(System.String)">
            <summary>
            是否为一个长整型数字
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.ToLong(System.String)">
            <summary>
            获取长整形数据
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.IsIPv4(System.String)">
            <summary>
            是否为一个标准的IPv4字符串
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.GetMD5(System.String)">
            <summary>
            获取字符串的MD5值
            </summary>
        </member>
        <member name="M:dpz3.StringHelper.GetSha1(System.String)">
            <summary>
            获取字符串的sha1值
            </summary>
        </member>
        <member name="T:dpz3.Time">
            <summary>
            日期时间专用对象
            </summary>
        </member>
        <member name="M:dpz3.Time.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:dpz3.Time.#ctor(System.DateTime)">
            <summary>
            对象实例化
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:dpz3.Time.#ctor(System.Int64,System.Boolean)">
            <summary>
            对象实例化
            </summary>
            <param name="tsp"></param>
            <param name="hasMilliseconds"></param>
        </member>
        <member name="M:dpz3.Time.New(System.String)">
            <summary>
            申请一个新的示例
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.New(System.DateTime)">
            <summary>
            申请一个新的示例
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.New(System.Int64,System.Boolean)">
            <summary>
            申请一个新的示例
            </summary>
            <param name="tsp"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Time.Now">
            <summary>
            申请一个新的示例
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToString(System.String)">
            <summary>
            获取指定格式的日期数据
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.OnParseString">
            <summary>
            转化为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Time.TimeZone">
            <summary>
            获取标准日期字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToTimeStamp">
            <summary>
            获取标准日期字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToMillisecondsTimeStamp">
            <summary>
            获取包含毫秒的时间戳
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToDateString">
            <summary>
            获取标准日期字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToTimeString">
            <summary>
            获取标准时间字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.ToStringWithMilliseconds">
            <summary>
            获取标准时间字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Time.Change(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取调整后的时间
            </summary>
            <param name="years"></param>
            <param name="months"></param>
            <param name="days"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Time.Year">
            <summary>
            获取年份
            </summary>
        </member>
        <member name="P:dpz3.Time.Month">
            <summary>
            获取月份
            </summary>
        </member>
        <member name="P:dpz3.Time.Day">
            <summary>
            获取日期
            </summary>
        </member>
        <member name="P:dpz3.Time.Hour">
            <summary>
            获取时
            </summary>
        </member>
        <member name="P:dpz3.Time.Minute">
            <summary>
            获取分
            </summary>
        </member>
        <member name="P:dpz3.Time.Second">
            <summary>
            获取秒
            </summary>
        </member>
        <member name="P:dpz3.Time.Millisecond">
            <summary>
            获取毫秒
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:dpz3.TimeVersion" -->
        <member name="P:dpz3.TimeVersion.Year">
            <summary>
            年份序号
            </summary>
        </member>
        <member name="P:dpz3.TimeVersion.Month">
            <summary>
            月份序号
            </summary>
        </member>
        <member name="P:dpz3.TimeVersion.Sign">
            <summary>
            年月标记
            </summary>
        </member>
        <member name="P:dpz3.TimeVersion.Build">
            <summary>
            版本序号
            </summary>
        </member>
        <member name="M:dpz3.TimeVersion.GetNextVersion">
            <summary>
            获取下一个版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.TimeVersion.#ctor(System.String)">
            <summary>
            新建一个
            </summary>
            <param name="ver"></param>
        </member>
        <member name="M:dpz3.TimeVersion.OnParseString">
            <summary>
            获取字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="T:dpz3.Xml.NodeType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="F:dpz3.Xml.NodeType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:dpz3.Xml.NodeType.CData">
            <summary>
            CDATA
            </summary>
        </member>
        <member name="F:dpz3.Xml.NodeType.Normal">
            <summary>
            标准节点
            </summary>
        </member>
        <member name="F:dpz3.Xml.NodeType.Declaration">
            <summary>
            申明节点
            </summary>
        </member>
        <member name="F:dpz3.Xml.NodeType.Note">
            <summary>
            注释
            </summary>
        </member>
        <member name="T:dpz3.Xml.BasicNode">
            <summary>
            基础节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.BasicNode.NodeType">
            <summary>
            获取节点类型
            </summary>
        </member>
        <member name="P:dpz3.Xml.BasicNode.Parent">
            <summary>
            获取父节点
            </summary>
        </member>
        <member name="M:dpz3.Xml.BasicNode.#ctor(dpz3.Xml.NodeType)">
            <summary>
            实例化
            </summary>
            <param name="nodeType"></param>
        </member>
        <member name="M:dpz3.Xml.BasicNode.OnGetOuterXml">
            <summary>
            获取包含自身的完整XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Xml.BasicNode.OuterXml">
            <summary>
            获取包含自身的完整XML字符串
            </summary>
        </member>
        <member name="M:dpz3.Xml.BasicNode.OnGetInnerXml">
            <summary>
            获取包含的XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.BasicNode.OnGetInnerText">
            <summary>
            获取包含的文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.BasicNode.OnSetInnerXml(System.String)">
            <summary>
            获取包含的XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Xml.BasicNode.InnerXml">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="P:dpz3.Xml.BasicNode.InnerText">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="T:dpz3.Xml.CDataNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.CDataNode.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="M:dpz3.Xml.CDataNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Xml.CDataNode.OnGetOuterXml">
            <summary>
            获取完整XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.CDataNode.OnGetInnerXml">
            <summary>
            获取包含
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.CDataNode.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.CDataNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.DeclarationNode">
            <summary>
            申明节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.DeclarationNode.Attr">
            <summary>
            获取属性集合
            </summary>
        </member>
        <member name="M:dpz3.Xml.DeclarationNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Xml.DeclarationNode.OnGetOuterXml">
            <summary>
            获取完整XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.DeclarationNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.NoteNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.NoteNode.Note">
            <summary>
            获取或设置
            </summary>
        </member>
        <member name="M:dpz3.Xml.NoteNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Xml.NoteNode.OnGetOuterXml">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.NoteNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.Parser">
            <summary>
            解析器
            </summary>
        </member>
        <member name="T:dpz3.Xml.Parser.ParserTypes">
            <summary>
            解析器类型
            </summary>
        </member>
        <member name="M:dpz3.Xml.Parser.EscapeEncode(System.String)">
            <summary>
            获取HTML转码后的序列化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.Parser.EscapeDecode(System.String)">
            <summary>
            获取HTML反转码后的序列化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.Parser.GetNodes(System.String,dpz3.Xml.XmlNode)">
            <summary>
            获取节点对象
            </summary>
            <param name="xml"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.Parser.GetDocument(System.String)">
            <summary>
            获取一个文档对象
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:dpz3.Xml.TextNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.TextNode.Value">
            <summary>
            获取或设置
            </summary>
        </member>
        <member name="M:dpz3.Xml.TextNode.SetEncodeValue(System.String)">
            <summary>
            设置带编码的值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.TextNode.#ctor">
            <summary>
            对象实例化
            </summary>
        </member>
        <member name="M:dpz3.Xml.TextNode.OnGetOuterXml">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.TextNode.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.TextNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.XmlDocument">
            <summary>
            文档对象
            </summary>
        </member>
        <member name="P:dpz3.Xml.XmlDocument.Nodes">
            <summary>
            获取子节点集合
            </summary>
        </member>
        <member name="M:dpz3.Xml.XmlDocument.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="xml"></param>
        </member>
        <member name="P:dpz3.Xml.XmlDocument.Item(System.String)">
            <summary>
            获取一个子节点
            </summary>
            <param name="tagname"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlDocument.GetNodesByTagName(System.String,System.Boolean)">
            <summary>
            获取所有标签名节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlDocument.GetNodesByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取所有满足属性限定的节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlDocument.GetNodeByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取第一个满足属性限定的节点
            </summary>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="P:dpz3.Xml.XmlDocument.InnerXml">
            <summary>
            获取包含的XML字符串
            </summary>
        </member>
        <member name="M:dpz3.Xml.XmlDocument.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.XmlNode">
            <summary>
            文本节点
            </summary>
        </member>
        <member name="P:dpz3.Xml.XmlNode.Nodes">
            <summary>
            获取子节点集合
            </summary>
        </member>
        <member name="P:dpz3.Xml.XmlNode.Attr">
            <summary>
            获取属性集合
            </summary>
        </member>
        <member name="M:dpz3.Xml.XmlNode.SetEncodeAttr(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="P:dpz3.Xml.XmlNode.IsSingle">
            <summary>
            获取或设置是否为独立标签
            </summary>
        </member>
        <member name="P:dpz3.Xml.XmlNode.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="M:dpz3.Xml.XmlNode.#ctor(System.String)">
            <summary>
            对象实例化
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:dpz3.Xml.XmlNode.OnGetOuterXml">
            <summary>
            获取完整XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.OnGetInnerXml">
            <summary>
            获取包含
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.OnSetInnerXml(System.String)">
            <summary>
            设置包含XML
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:dpz3.Xml.XmlNode.OnGetInnerText">
            <summary>
            获取内置文本
            </summary>
            <returns></returns>
        </member>
        <member name="P:dpz3.Xml.XmlNode.Item(System.String)">
            <summary>
            获取一个子节点
            </summary>
            <param name="tagname"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.GetNodesByTagName(System.String,System.Boolean)">
            <summary>
            获取所有标签名节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.GetNodesByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取所有满足属性限定的节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.GetNodeByAttr(System.String,System.String,System.Boolean)">
            <summary>
            获取第一个满足属性限定的节点
            </summary>
            <param name="tagName"></param>
            <param name="searchChildNodes"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.AddNode(System.String)">
            <summary>
            添加一个新的标准节点
            </summary>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.AddNote">
            <summary>
            添加一个注释
            </summary>
            <returns></returns>
        </member>
        <member name="M:dpz3.Xml.XmlNode.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:dpz3.Xml.XmlNodeCollection">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:dpz3.Xml.XmlNodeCollection.#ctor(dpz3.Xml.XmlNode)">
            <summary>
            对象实例化
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:dpz3.Xml.XmlNodeCollection.Add(dpz3.Xml.BasicNode)">
            <summary>
            对象实例化
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:dpz3.Xml.XmlNodeCollection.Insert(System.Int32,dpz3.Xml.BasicNode)">
            <summary>
            插入对象
            </summary>
            <param name="index"></param>
            <param name="node"></param>
        </member>
    </members>
</doc>
